package cbor

import (
	"testing"
	"time"
)

func TestBasics(t *testing.T) {
	tests := [][]byte{
		[]byte{0x98, 0x19, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x18, 0x18, 0x19},
		[]byte{0xa2, 0x61, 0x61, 0x01, 0x61, 0x62, 0x82, 0x02, 0x03},
		[]byte{0x7f, 0x65, 0x73, 0x74, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x67, 0xff},
		[]byte{0xf5},
		[]byte{0xf9, 0xfc, 0x00},
		[]byte{0xfa, 0x7f, 0x7f, 0xff, 0xff},
		[]byte{0xf9, 0x00, 0x01},
		[]byte{0xc0, 0x74, 0x32, 0x30, 0x31, 0x33, 0x2d, 0x30, 0x33, 0x2d, 0x32, 0x31, 0x54, 0x32, 0x30, 0x3a, 0x30, 0x34, 0x3a, 0x30, 0x30, 0x5a},
		[]byte{0xa2, 0x0c, 0x6b, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x18, 0x20, 0x67, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67},
	}
	for _, test := range tests {
		v, err := Decode(test)
		if err != nil {
			t.Errorf("failed to decode array: %s", err.Error())
		}
		t.Logf("decoded array to: %+v", v)
	}
}

func TestEncode(t *testing.T) {
	t.Logf("encoded byte string \"Hello world!\" to: %x", Encode([]byte("Hello world!")))
	t.Logf("encoded integer \"123456789\" to: %x", Encode(123456789))
	t.Logf("encoded negative integer \"-123456789\" to: %x", Encode(-123456789))
	t.Logf("encoded map[int]string to %x", Encode(map[int]string{
		12: "Hello world",
		32: "Testing",
	}))
	t.Logf("encoded current time to %x", Encode(time.Now()))
	t.Logf("encoded struct to %x", Encode(struct {
		Name  string
		Value uint64 `cbor:"val"`
	}{
		"Test",
		128,
	}))
}
